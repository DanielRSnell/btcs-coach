import{j as o,u as ce,r as c,H as de,a as K}from"./app-Cv0O0Kw5.js";import{A as ge,M as y,D as ue,a as he,b as fe,c as me,d as we,e as pe}from"./app-layout-CH3teAOu.js";import{C as J,a as ve,b as be,d as Se,c as z}from"./card-CBbY31Ag.js";import{a as T,c as xe,B as p}from"./app-logo-icon-4zeCEbkK.js";import{C as ye}from"./clock-C9mnUAE8.js";import{M as Ne}from"./mic-Dj1ZR93h.js";/* empty css            */import"./index-DIzj-Ao1.js";import"./label-CfjChmtD.js";/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ee=[["path",{d:"M8 2v4",key:"1cmpym"}],["path",{d:"M16 2v4",key:"4m81vk"}],["rect",{width:"18",height:"18",x:"3",y:"4",rx:"2",key:"1hopcy"}],["path",{d:"M3 10h18",key:"8toen8"}]],Ce=T("Calendar",Ee);/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const je=[["path",{d:"M17 14V2",key:"8ymqnk"}],["path",{d:"M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22a3.13 3.13 0 0 1-3-3.88Z",key:"m61m77"}]],B=T("ThumbsDown",je);/**
 * @license lucide-react v0.475.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ie=[["path",{d:"M7 10v12",key:"1qc93n"}],["path",{d:"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z",key:"emmmcr"}]],q=T("ThumbsUp",Ie);function _e({className:d,...g}){return o.jsx("textarea",{"data-slot":"textarea",className:xe("border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",d),...g})}function Pe({user:d,sessions:g,currentSessionId:A,currentSession:N,newSessionName:I,newSessionStatus:Y}){console.log("🔍 Sessions component loaded with data:"),console.log("👤 User received:",d?.name,d?.id),console.log("📊 Sessions received:",g),console.log("📊 Sessions type:",typeof g),console.log("📊 Sessions keys:",g?Object.keys(g):"sessions is null/undefined"),console.log("📊 Sessions count:",g?Object.keys(g).length:0),console.log("🎯 Current Session ID received:",A),console.log("🎯 Current Session data received:",N),console.log("🆕 New Session Name received:",I),console.log("🆕 New Session Status received:",Y);const{props:Oe}=ce(),h=new URLSearchParams(window.location.search).get("mode")==="audio";console.log("🎵 Audio mode detected:",h);const[Le,R]=c.useState({}),[X,Z]=c.useState(null),[$,Q]=c.useState(!1),[u,E]=c.useState(null),[De,ee]=c.useState(!1),[m,oe]=c.useState(I||null),[se,S]=c.useState(!1),[w,C]=c.useState(null),[_,O]=c.useState(""),[k,V]=c.useState(!1),te=c.useRef(null);c.useCallback(e=>{e&&h&&console.log("🎯 ElevenLabs container element mounted")},[h]);const F=()=>{console.log("🔄 External refresh requested - reloading sessions data..."),console.log("🔄 Current sessions before reload:",g),console.log("🔄 Sessions count before reload:",Object.keys(g).length),K.reload({only:["sessions"],onSuccess:e=>{console.log("✅ Reload successful - new page data:",e),console.log("✅ New sessions data:",e.props.sessions),console.log("✅ New sessions count:",Object.keys(e.props.sessions||{}).length)},onError:e=>{console.error("❌ Reload failed:",e)}})};c.useEffect(()=>(window.refreshSessionsList=F,console.log("✅ Global function window.refreshSessionsList() is now available"),()=>{delete window.refreshSessionsList,console.log("🧹 Cleaned up window.refreshSessionsList()")}),[F]),c.useEffect(()=>{if(!document.querySelector('script[src*="widget-next/bundle.mjs"]')){const e=document.createElement("script");e.src="https://cdn.voiceflow.com/widget-next/bundle.mjs",e.async=!0,e.type="text/javascript",document.head.appendChild(e)}},[]);const ne=()=>{console.log("🔄 INITIALIZING VOICEFLOW: Starting initialization..."),setTimeout(()=>{console.log("🎯 DOM READY: Starting Voiceflow initialization...");const e=document.getElementById("main-voiceflow-chat");console.log("📍 Chat element found:",e),window.voiceflow&&window.voiceflow.chat?(console.log("✅ VOICEFLOW AVAILABLE: Using existing Voiceflow instance"),M()):(console.log("🚀 LOADING VOICEFLOW: Loading Voiceflow script..."),function(l,n){const t=l.createElement(n),s=l.getElementsByTagName(n)[0];t.onload=function(){console.log("📦 SCRIPT LOADED: Voiceflow script loaded, window.voiceflow:",window.voiceflow),M()},t.src="https://cdn.voiceflow.com/widget-next/bundle.mjs",t.type="text/javascript",s.parentNode?.insertBefore(t,s)}(document,"script"))},100)},M=()=>{if(console.log("⚡ LOADING CHAT: Configuring Voiceflow chat..."),window.voiceflow&&window.voiceflow.chat){const e=document.getElementById("main-voiceflow-chat");console.log("🎯 Target element for Voiceflow:",e);const l=window.ChatInfo?.payload||{},n=window.ChatInfo?.name||"";console.log("🚀 Voiceflow User Payload:",JSON.stringify(l,null,2)),console.log("🚀 Voiceflow Chat Name:",n),window.voiceflow.chat.load({verify:{projectID:"686331bc96acfa1dd62f6fd5"},url:"https://general-runtime.voiceflow.com",versionID:"production",assistant:{type:"chat",banner:{title:n},extensions:[window.AdaptiveCardExtension],stylesheet:"/voiceflow.css?v="+new Date().toISOString().replace(/[:.]/g,"-"),inputPlaceholder:"What's my PI Profile?"},render:{mode:"embedded",target:e},autostart:!0,launch:{event:{type:"launch",payload:l}}}),console.log("✅ CHAT LOADED: Voiceflow chat loaded successfully"),ee(!0);let t=0;const s=10,i=()=>{t++;const a=Object.keys(localStorage).filter(r=>r.startsWith("voiceflow-session-"));console.log(`🔄 POST-VOICEFLOW SCAN (attempt ${t}): Found ${a.length} localStorage sessions`),a.length>0?(console.log("✅ New localStorage sessions detected, running scan..."),console.log("🎯 Pending session name for registration:",m),console.log("🎯 New session name from props:",I),U()):t<s?setTimeout(i,500):console.log("⏰ Max attempts reached, no new sessions found after Voiceflow load")};setTimeout(i,1e3),m&&(console.log("🎯 NEW SESSION FLOW: Detected pendingSessionName, setting up direct registration..."),setTimeout(()=>{console.log("🎯 NEW SESSION FLOW: Attempting direct registration for new session...");const a=Object.keys(localStorage).filter(r=>r.startsWith("voiceflow-session-"));a.length>0?(console.log("🎯 NEW SESSION FLOW: Found localStorage entries, processing..."),a.forEach(async r=>{const f=localStorage.getItem(r);f&&(console.log(`🎯 NEW SESSION FLOW: Processing ${r} with pending name "${m}"`),await x(r,f))})):console.log("🎯 NEW SESSION FLOW: No localStorage entries found yet")},2e3))}else{console.error("❌ VOICEFLOW MISSING: Voiceflow widget failed to load - missing window.voiceflow");const e=document.getElementById("main-voiceflow-chat");e&&(e.innerHTML=`
                    <div class="flex items-center justify-center h-96 bg-gray-50 rounded-lg">
                        <div class="text-center">
                            <div class="text-gray-500 mb-2">Chat widget failed to load</div>
                            <button onclick="location.reload()" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
                                Retry
                            </button>
                        </div>
                    </div>
                `)}};c.useEffect(()=>{const e={id:d?.id||0,name:d?.name||"Anonymous",email:d?.email||"",role:d?.role||"member",pi_behavioral_pattern_id:d?.pi_behavioral_pattern_id||null,pi_behavioral_pattern:d?.pi_behavioral_pattern||null,pi_raw_scores:d?.pi_raw_scores||null,pi_assessed_at:d?.pi_assessed_at||null,pi_notes:d?.pi_notes||null,pi_profile:d?.pi_profile||null,has_pi_assessment:d?.has_pi_assessment||!1,has_pi_profile:d?.has_pi_profile||!1},l=N?.name||m||"";if(window.ChatInfo={name:l,payload:e},console.log("✅ window.ChatInfo created for",h?"AUDIO":"TEXT","mode:",window.ChatInfo),h){const n=window.ChatInfo?.payload||{};let t={};const s=Object.keys(localStorage).filter(a=>a.startsWith("voiceflow-session-"));if(s.length>0){const a=localStorage.getItem(s[0]);if(a)try{t=JSON.parse(a)}catch(r){console.warn("Failed to parse voiceflow localStorage:",r)}}window.chatContext={...n,...t},console.log("✅ window.chatContext created:",window.chatContext),(()=>{console.log("🔍 Setting up MutationObserver for ElevenLabs widget..."),new MutationObserver(f=>{f.forEach(ie=>{ie.addedNodes.forEach(H=>{if(H.nodeType===Node.ELEMENT_NODE){const D=H;let b=null;D.tagName?.toLowerCase()==="elevenlabs-convai"?b=D:b=D.querySelector?.("elevenlabs-convai"),b&&(console.log("🎙️ ElevenLabs widget detected by MutationObserver!"),console.log("📦 Setting dynamic-variables attribute with chatContext:",window.chatContext),b.setAttribute("dynamic-variables",window.chatContext),console.log("✅ dynamic-variables attribute set with object:",window.chatContext),console.log("🔍 Widget HTML:",b.outerHTML),b.addEventListener("elevenlabs-convai:call",re=>{console.log("🔧 ElevenLabs widget call event triggered"),console.log("📦 window.chatContext is available with data:",window.chatContext),re.detail.config.clientTools={getChatSessionData:()=>(console.log("📞 getChatSessionData called by ElevenLabs"),console.log("📦 window.chatContext is available with data:",window.chatContext),window.chatContext)},console.log("✅ ElevenLabs client tools configured")}))}})})}).observe(document.body,{childList:!0,subtree:!0}),console.log("👀 MutationObserver started, watching for ElevenLabs widget...");const r=document.querySelector("elevenlabs-convai");r&&(console.log("🎙️ ElevenLabs widget already exists!"),console.log("📦 Setting dynamic-variables attribute with chatContext:",window.chatContext),r.setAttribute("dynamic-variables",window.chatContext),console.log("✅ dynamic-variables attribute set on existing widget:",window.chatContext),console.log("🔍 Widget HTML:",r.outerHTML))})()}if(!h)console.log("🔄 COMPONENT MOUNT: Initializing Voiceflow..."),console.log("👤 User:",d?.name,d?.id),console.log("📍 Current Session ID:",A),ne();else{console.log("🎵 AUDIO MODE: Loading ElevenLabs ConvAI widget script...");const n=document.createElement("script");n.src="https://unpkg.com/@elevenlabs/convai-widget-embed",n.async=!0,n.type="text/javascript",document.body.appendChild(n);const t=document.createElement("script");return t.src="/eleven-labs.js",t.async=!0,t.type="text/javascript",document.body.appendChild(t),console.log("🎨 AUDIO MODE: Loading ElevenLabs styling script..."),()=>{document.body.contains(n)&&(console.log("🧹 AUDIO MODE: Cleaning up ElevenLabs widget script"),document.body.removeChild(n)),document.body.contains(t)&&(console.log("🧹 AUDIO MODE: Cleaning up ElevenLabs styling script"),document.body.removeChild(t))}}},[d,h]);const j=async(e,l)=>{try{console.log(`📡 Making API call to ${e} with data:`,l);const n=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]')?.getAttribute("content")||""},body:JSON.stringify(l)});console.log(`📡 Response status: ${n.status} ${n.statusText}`),console.log("📡 Response headers:",Object.fromEntries(n.headers.entries()));const t=await n.text();console.log("📡 Raw response:",t.substring(0,200)+(t.length>200?"...":""));let s;try{s=JSON.parse(t),console.log("📡 Parsed JSON result:",s)}catch(i){return console.error("❌ Failed to parse response as JSON:",i),console.log("❌ Response was:",t),{error:"Invalid JSON response",raw_response:t}}return s.error==="Unauthenticated"&&console.warn(`🔒 Authentication required for ${e}. User may need to log in again.`),s}catch(n){return console.error(`❌ API call to ${e} failed:`,n),{error:"Network error",details:n}}},v=()=>{try{const e=Object.keys(localStorage).filter(l=>l.startsWith("voiceflow-session-"));if(e.length===0){E(null);return}for(const l of e){const n=localStorage.getItem(l);if(n)try{const s=JSON.parse(n).userID;if(s&&g[s]){E(s),console.log(`🎯 Current active session identified: ${s} from localStorage key: ${l}`);return}}catch(t){console.warn(`⚠️ Could not parse localStorage session ${l}:`,t);continue}}E(null)}catch(e){console.error("❌ Error identifying current active session:",e),E(null)}},x=async(e,l)=>{const n=e.replace("voiceflow-session-","");try{console.log(`🔍 Monitoring localStorage key: ${e}`),console.log("📦 Raw localStorage value:",l.substring(0,200)+"...");let t;try{t=JSON.parse(l)}catch(a){console.error(`❌ Failed to parse localStorage JSON for ${e}:`,a);return}const s=t.userID;if(console.log("🎯 Session Analysis:",{localStorage_key:e,project_id:n,session_userID:s,status:t.status,turns_count:t.turns?.length||0}),!s){console.warn("⚠️ No userID found in localStorage value. Available keys:",Object.keys(t)),console.warn("⚠️ Cannot process session without userID - skipping");return}console.log(`🔍 🔍 CHECKING: Does session with userID "${s}" exist in database?`);const i=await j("/api/sessions/check",{project_id:n,voiceflow_user_id:s});if(i&&i.error){i.error==="Unauthenticated"?console.warn(`🔒 ❌ CANNOT CHECK: User not authenticated - skipping session "${s}"`):i.error==="Invalid JSON response"?console.error("🚨 ❌ API ERROR: Returning HTML instead of JSON - check routes/middleware"):console.error(`❌ API ERROR: Failed to check session "${s}":`,i.error);return}if(i&&i.exists){console.log(`✅ ✅ SESSION EXISTS: Found userID "${s}" in database`),console.log("🔄 🔄 UPDATING: Syncing current localStorage value to existing session...");const a=await j("/api/sessions/update",{project_id:n,session_data:{last_turn:t,source:"localStorage_sync"}});a?.success?(console.log(`✅ ✅ UPDATE SUCCESS: Session "${s}" updated with latest localStorage data`),console.log(`📊 Updated session now has ${t.turns?.length||0} messages`)):a?.error&&console.error(`❌ ❌ UPDATE FAILED: Could not update session "${s}":`,a.error)}else{console.log(`🆕 🆕 NEW SESSION DETECTED: userID "${s}" NOT found in database`),console.log("📝 📝 REGISTERING: Creating new session record..."),console.log(`🎯 Using pending session name: "${m}"`),console.log(`🎯 Registration triggered from: ${new Error().stack?.split(`
`)[1]?.trim()}`);const a={project_id:n,session_data:{last_turn:t,source:"localStorage_sync",detected_at:new Date().toISOString()},session_name:m};console.log("📋 Registration details:",{project_id:n,userID:s,status:t.status,message_count:t.turns?.length||0});const r=await j("/api/sessions/register",a);r?.success?(console.log(`✅ ✅ REGISTRATION SUCCESS: New session "${s}" created in database`),console.log("🎉 🎉 NEW SESSION ADDED: Refreshing sidebar to show the new session..."),console.log("📊 Registered session data:",r),oe(null),console.log("🔄 Triggering sessions list refresh..."),K.reload({only:["sessions"],onSuccess:()=>{console.log("✅ Sessions list refreshed successfully")},onError:f=>{console.error("❌ Failed to refresh sessions list:",f)}})):r?.error&&(console.error(`❌ ❌ REGISTRATION FAILED: Could not create session "${s}":`,r.error),console.error("❌ Full error details:",r))}console.log(`🏁 🏁 SYNC COMPLETE: Finished processing session "${s}"`),console.log("─────────────────────────────────────────────────────────────────")}catch(t){console.error("❌ Error processing localStorage session:",t)}},U=async()=>{console.log("🔍 🚀 🚀 STARTING INITIAL LOCALSTORAGE SCAN..."),console.log("🔍 Scanning for keys matching pattern: voiceflow-session-*");const e=Object.keys(localStorage).filter(l=>l.startsWith("voiceflow-session-"));console.log(`📦 📦 FOUND ${e.length} VOICEFLOW SESSION KEYS:`),e.forEach((l,n)=>{console.log(`  ${n+1}. ${l}`)}),e.length===0?console.log("📭 No Voiceflow sessions found in localStorage - monitoring for new ones..."):console.log("🔄 🔄 PROCESSING EACH SESSION: Checking database and syncing...");for(let l=0;l<e.length;l++){const n=e[l],t=localStorage.getItem(n);console.log(`
🔄 [${l+1}/${e.length}] PROCESSING: ${n}`),t?await x(n,t):console.warn(`⚠️ ⚠️ WARNING: Key ${n} has no value - skipping`)}console.log(`
✅ ✅ INITIAL SCAN COMPLETE: Processed ${e.length} sessions`),console.log("🎧 🎧 MONITORING ACTIVE: Watching for localStorage changes..."),console.log("═══════════════════════════════════════════════════════════════════")};c.useEffect(()=>{U()},[]),c.useEffect(()=>{g&&Object.keys(g).length>0&&v()},[g]),c.useEffect(()=>{if($)return;console.log("🎧 Setting up CONTINUOUS localStorage monitoring...");const e=async s=>{s.key?.startsWith("voiceflow-session-")&&(console.log("🔄 🔄 LOCALSTORAGE CHANGE DETECTED!"),console.log(`📍 Key: ${s.key}`),console.log(`📦 New value length: ${s.newValue?.length||0} characters`),console.log("🚀 🚀 TRIGGERING SYNC: Processing localStorage change..."),s.newValue?(console.log(`📋 PROCESSING: localStorage change for ${s.key}`),await x(s.key,s.newValue),v()):(console.log(`🗑️ VALUE REMOVED: localStorage key ${s.key} was deleted (not processing)`),v()))};window.addEventListener("storage",e);const l=localStorage.setItem;localStorage.setItem=function(s,i){const a=new CustomEvent("localStorageChange",{detail:{key:s,newValue:i,oldValue:localStorage.getItem(s)}});l.apply(this,[s,i]),window.dispatchEvent(a)};const n=s=>{const{key:i,newValue:a}=s.detail;i?.startsWith("voiceflow-session-")&&(a&&x(i,a),v())};window.addEventListener("localStorageChange",n);const t=setInterval(()=>{console.log("🔍 Polling for new localStorage sessions..."),Object.keys(localStorage).filter(i=>i.startsWith("voiceflow-session-")).forEach(i=>{const a=localStorage.getItem(i);if(a)try{const f=JSON.parse(a).userID;f&&!g[f]&&(console.log(`🆕 NEW SESSION DETECTED via polling: ${i} with userID: ${f}`),x(i,a),v())}catch(r){console.warn(`⚠️ Could not parse session during polling: ${i}`,r)}})},2e3);return Q(!0),console.log("✅ localStorage listeners and polling set up successfully"),()=>{window.removeEventListener("storage",e),window.removeEventListener("localStorageChange",n),clearInterval(t),localStorage.setItem=l}},[$]),c.useEffect(()=>(console.log("🗳️ Setting up window.chatActions..."),window.chatActions={upVote:e=>{console.log("👍 Message upvoted:",e.substring(0,100)+"...")},downVote:e=>{console.log("👎 Message downvoted:",e.substring(0,100)+"...")}},console.log("✅ window.chatActions set up successfully"),()=>{delete window.chatActions}),[]);const W=e=>{try{return new Date(e).toLocaleDateString("en-US",{month:"short",day:"numeric",hour:"numeric",minute:"2-digit"})}catch{return"Unknown"}},le=(e,l)=>{console.log(`🔄 SWITCHING TO SESSION: ${e}`),console.log("📊 Session data:",l);try{console.log("🧹 CLEARING: Removing all voiceflow-session-* from localStorage"),Object.keys(localStorage).filter(r=>r.startsWith("voiceflow-session-")).forEach(r=>{console.log(`🗑️ Removing: ${r}`),localStorage.removeItem(r)});const s=`voiceflow-session-${l.project_id||"686331bc96acfa1dd62f6fd5"}`,i=l.value||{};console.log(`📝 CREATING: New localStorage entry ${s}`),console.log("📦 Session value data:",i),localStorage.setItem(s,JSON.stringify(i)),Z(e);const a=`/sessions/${e}`;console.log(`🧭 NAVIGATING: To ${a} (full page reload)`),window.location.href=a}catch(n){console.error("❌ Error switching sessions:",n)}},ae=async()=>{if(!w||!u){console.error("Missing feedback rating or active session ID");return}V(!0);try{console.log("📝 Submitting feedback",{session_id:u,rating:w,comment:_});const e=await j("/api/sessions/feedback",{session_id:u,rating:w,comment:_.trim()||null});e?.success?(console.log("✅ Feedback submitted successfully"),S(!1),C(null),O(""),alert("Thank you for your feedback!")):(console.error("❌ Feedback submission failed:",e),alert("Failed to submit feedback. Please try again."))}catch(e){console.error("❌ Error submitting feedback:",e),alert("An error occurred while submitting feedback.")}finally{V(!1)}},P=()=>{if(!u){console.warn("No active session to provide feedback for");return}console.log("👍 Thumbs up clicked for session:",u),C("positive"),S(!0)},G=()=>{if(!u){console.warn("No active session to provide feedback for");return}console.log("👎 Thumbs down clicked for session:",u),C("negative"),S(!0)},L=()=>{try{const e=window.ChatInfo?.payload||{};console.log("🎯 Base payload from ChatInfo:",e);let l={};const n=Object.keys(localStorage).filter(s=>s.startsWith("voiceflow-session-"));if(console.log("🔍 Found voiceflow localStorage keys:",n),n.length>0){let s=null;if(u){console.log("🎯 Looking for localStorage data for active session:",u);for(const i of n){const a=localStorage.getItem(i);if(a)try{const r=JSON.parse(a);if(r.userID===u){s=r,console.log("✅ Found matching localStorage session data");break}}catch(r){console.warn("Failed to parse localStorage session:",i,r)}}}if(!s&&n.length>0){console.log("🔄 No active session match, using first available localStorage session");const i=localStorage.getItem(n[0]);if(i)try{s=JSON.parse(i),console.log("✅ Using first available session data")}catch(a){console.warn("Failed to parse first localStorage session:",a)}}s?(l={voiceflow_session_id:s.userID,voiceflow_status:s.status,voiceflow_turn_count:s.turns?.length||0,voiceflow_project_id:s.projectID,voiceflow_last_updated:new Date().toISOString()},console.log("📦 Voiceflow data extracted:",l)):console.log("⚠️ No valid localStorage session data found")}else console.log("📭 No voiceflow localStorage keys found");const t={context:{user_id:e.id||0,user_name:e.name||"Anonymous",user_email:e.email||"",user_role:e.role||"member",pi_behavioral_pattern_id:e.pi_behavioral_pattern_id||null,pi_behavioral_pattern:e.pi_behavioral_pattern||null,pi_raw_scores:e.pi_raw_scores||null,pi_assessed_at:e.pi_assessed_at||null,pi_notes:e.pi_notes||null,pi_profile:e.pi_profile||null,has_pi_assessment:e.has_pi_assessment||!1,has_pi_profile:e.has_pi_profile||!1,voiceflow_session_id:l.voiceflow_session_id||null,voiceflow_status:l.voiceflow_status||null,voiceflow_turn_count:l.voiceflow_turn_count||0,voiceflow_project_id:l.voiceflow_project_id||null,voiceflow_last_updated:l.voiceflow_last_updated||null,audio_mode:!0,current_session_id:u||null,timestamp:new Date().toISOString()}};return console.log("🎙️ ElevenLabs full context variables built:",t),t}catch(e){return console.error("❌ Error building ElevenLabs variables:",e),{context:{error:"Failed to build variables",timestamp:new Date().toISOString()}}}};return c.useEffect(()=>{if(h){const e=L();R(e),console.log("🔄 Updated ElevenLabs variables:",e)}},[h,u,d]),c.useEffect(()=>{if(!h)return;const e=()=>{const t=L();R(t),console.log("🔄 ElevenLabs variables updated from localStorage change:",t)},l=setInterval(e,5e3),n=t=>{t.key?.startsWith("voiceflow-session-")&&e()};return window.addEventListener("storage",n),()=>{clearInterval(l),window.removeEventListener("storage",n)}},[h,L]),o.jsxs(ge,{children:[o.jsx(de,{title:"Sessions"}),o.jsxs("div",{className:"flex h-[calc(100vh-8rem)] gap-6 pt-6",children:[o.jsx("div",{className:"w-80 flex-shrink-0",children:o.jsxs(J,{className:"h-full flex flex-col gap-1 py-0 pt-6",children:[o.jsxs(ve,{className:"flex-shrink-0",children:[o.jsxs(be,{className:"flex items-center gap-2",children:[o.jsx(y,{className:"h-5 w-5"}),"Your Sessions"]}),o.jsxs(Se,{children:[Object.keys(g).length," active session",Object.keys(g).length!==1?"s":""]})]}),o.jsx(z,{className:"p-0 flex-1 flex flex-col min-h-0",children:o.jsx("div",{className:"flex-1 overflow-y-auto no-scrollbar",children:Object.keys(g).length===0?o.jsx("div",{className:"h-full flex flex-col items-center justify-center p-6 text-center",children:o.jsxs("div",{className:"flex flex-col items-center space-y-4",children:[o.jsx("div",{className:"p-6 bg-gray-50 rounded-full",children:o.jsx(y,{className:"h-10 w-10 text-gray-300"})}),o.jsxs("div",{className:"space-y-2",children:[o.jsx("h3",{className:"text-lg font-semibold text-gray-700",children:"No active sessions yet"}),o.jsx("p",{className:"text-sm text-gray-500 max-w-sm",children:"Start a conversation in the chat area to begin your coaching journey and create your first session."})]}),o.jsx("div",{className:"flex items-center space-x-2 text-xs text-gray-400 mt-6",children:o.jsxs("div",{className:"flex items-center space-x-1",children:[o.jsx("div",{className:"w-2 h-2 bg-green-400 rounded-full animate-pulse"}),o.jsx("span",{children:"Ready to chat"})]})})]})}):o.jsx("div",{className:"p-4 space-y-3",children:Object.entries(g).map(([e,l])=>o.jsxs("div",{className:`p-3 rounded-lg border cursor-pointer transition-colors ${u===e?"bg-green-50 border-green-300 shadow-sm ring-2 ring-green-200":X===e?"bg-blue-50 border-blue-200":"bg-white hover:bg-gray-50"}`,onClick:()=>le(e,l),children:[o.jsx("div",{className:"flex items-start justify-between mb-2",children:o.jsxs("div",{className:"font-medium text-sm truncate flex-1",children:[l.name||`Session ${e.substring(e.length-8)}`,u===e&&o.jsx("span",{className:"ml-2 text-xs bg-green-500 text-white px-2 py-0.5 rounded-full",children:"Current"})]})}),o.jsxs("div",{className:"flex items-center gap-2 text-xs text-gray-500",children:[o.jsx(Ce,{className:"h-3 w-3"}),o.jsx("span",{children:W(l.created_at)})]}),o.jsxs("div",{className:"flex items-center gap-2 text-xs text-gray-500 mt-1",children:[o.jsx(ye,{className:"h-3 w-3"}),o.jsxs("span",{children:["Updated ",W(l.updated_at)]})]}),o.jsxs("div",{className:"flex items-center gap-2 text-xs text-gray-400 mt-1",children:[o.jsx(y,{className:"h-3 w-3"}),o.jsxs("span",{children:[l.value?.turns?.length||0," messages"]})]})]},e))})})})]})}),o.jsx("div",{className:"flex-1",children:o.jsx(J,{className:"h-full py-0",children:o.jsx(z,{className:"p-0 h-full",children:h?o.jsxs("div",{className:"h-full w-full rounded-lg overflow-hidden flex flex-col relative",children:[o.jsxs("div",{className:"flex items-center p-4 bg-white",children:[o.jsxs("div",{className:"flex items-center gap-3",children:[o.jsx(p,{variant:"ghost",size:"sm",className:"h-8 w-8 p-0 hover:bg-blue-50 hover:text-blue-600",onClick:()=>{console.log("💬 Switch to text chat");const e=new URL(window.location.href);e.searchParams.delete("mode"),window.location.href=e.toString()},children:o.jsx(y,{className:"h-4 w-4"})}),o.jsx("div",{className:"w-px h-5 bg-gray-300"}),o.jsx("h2",{className:"text-lg font-semibold text-gray-900",children:N?.name||m||"Audio Session"})]}),o.jsxs("div",{className:"flex items-center gap-2 ml-auto",children:[o.jsx(p,{variant:"ghost",size:"sm",className:"h-8 w-8 p-0 hover:bg-green-50 hover:text-green-600",onClick:P,children:o.jsx(q,{className:"h-4 w-4"})}),o.jsx(p,{variant:"ghost",size:"sm",className:"h-8 w-8 p-0 hover:bg-red-50 hover:text-red-600",onClick:G,children:o.jsx(B,{className:"h-4 w-4"})})]})]}),o.jsx("div",{className:"flex-1 relative",children:o.jsx("elevenlabs-convai",{ref:te,"data-test":"elevenlabs-convai","agent-id":"agent_0901k31ke64mf0w8me1gdwygb7ze",style:{display:"block",opacity:"0",position:"absolute",top:"0",left:"0",width:"100%",height:"100%",minHeight:"400px",border:"none",borderRadius:"0 0 8px 8px",transition:"opacity 0.5s ease-in-out"}})})]}):o.jsxs("div",{className:"h-full w-full rounded-lg overflow-hidden flex flex-col relative",children:[o.jsxs("div",{className:"flex items-center p-4 bg-white",children:[o.jsxs("div",{className:"flex items-center gap-3",children:[o.jsx(p,{variant:"ghost",size:"sm",className:"h-8 w-8 p-0 hover:bg-blue-50 hover:text-blue-600",onClick:()=>{console.log("🎙️ Switch to audio mode");const e=new URL(window.location.href);e.searchParams.set("mode","audio"),window.location.href=e.toString()},children:o.jsx(Ne,{className:"h-4 w-4"})}),o.jsx("div",{className:"w-px h-5 bg-gray-300"}),o.jsx("h2",{className:"text-lg font-semibold text-gray-900",children:N?.name||m||"Text Chat"})]}),o.jsxs("div",{className:"flex items-center gap-2 ml-auto",children:[o.jsx(p,{variant:"ghost",size:"sm",className:"h-8 w-8 p-0 hover:bg-green-50 hover:text-green-600",onClick:P,children:o.jsx(q,{className:"h-4 w-4"})}),o.jsx(p,{variant:"ghost",size:"sm",className:"h-8 w-8 p-0 hover:bg-red-50 hover:text-red-600",onClick:G,children:o.jsx(B,{className:"h-4 w-4"})})]})]}),o.jsx("div",{className:"flex-1 relative",children:o.jsx("div",{id:"main-voiceflow-chat",className:"absolute inset-0",children:o.jsx("div",{className:"flex items-center justify-center h-full bg-gray-50",children:o.jsxs("div",{className:"text-center",children:[o.jsx(y,{className:"h-8 w-8 mx-auto mb-4 text-gray-300"}),o.jsx("p",{className:"text-gray-500",children:"Loading chat interface..."})]})})})})]})})})})]}),o.jsx(ue,{open:se,onOpenChange:S,children:o.jsxs(he,{className:"sm:max-w-[425px]",children:[o.jsxs(fe,{children:[o.jsx(me,{children:w==="positive"?"👍 Share your positive feedback":"👎 Help us improve"}),o.jsx(we,{children:w==="positive"?"We'd love to hear what you enjoyed about this session!":"Let us know what went wrong so we can improve your experience."})]}),o.jsx("div",{className:"space-y-4",children:o.jsxs("div",{children:[o.jsxs("label",{htmlFor:"feedback-comment",className:"text-sm font-medium",children:[w==="positive"?"What did you like?":"What can we improve?"," ","(optional)"]}),o.jsx(_e,{id:"feedback-comment",placeholder:w==="positive"?"Tell us what worked well...":"Tell us what didn't work or what you expected...",value:_,onChange:e=>O(e.target.value),className:"mt-2",rows:4})]})}),o.jsxs(pe,{children:[o.jsx(p,{variant:"outline",onClick:()=>{S(!1),C(null),O("")},disabled:k,children:"Cancel"}),o.jsx(p,{onClick:ae,disabled:k,className:w==="positive"?"bg-green-600 hover:bg-green-700":"bg-blue-600 hover:bg-blue-700",children:k?"Submitting...":"Submit Feedback"})]})]})})]})}export{Pe as default};
